# SERVER CONFIG
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
server.port=8080

# DATABASE CONFIG
spring.datasource.url = jdbc:mysql://localhost:3306/blog?useSSL=false&serverTimezone=Asia/Jakarta
spring.datasource.username=root
spring.datasource.password=123123123
spring.jpa.hibernate.ddl-auto = update

# JPA CONFIG
spring.jpa.generate-ddl=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# JPA CONFIG
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.legacy_limit_handler=true
spring.jpa.properties.hibernate.format_sql=true

# LOGGING CONFIG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
# logging.level.com.taxpedia.uma=DEBUG
# logging.level.org.apache.kafka=INFO
logging.pattern.file=%d %p %c{1.} [%t] %m%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

# SERVER CONFIG
# auth.server.url = http://taxpedia-api.festiware.com/api/uma/oauth/check_token
# auth.server.clientId = spring-security-oauth2-read-client
# auth.server.clientSecret = spring-security-oauth2-read-client-password1234
# auth.server.resource_id = resource-server-rest-api

# KAFKA Consumer
# spring.kafka.consumer.bootstrap-servers=18.138.240.107:9092

# KAFKA Producer
# spring.kafka.producer.bootstrap-servers=18.138.240.107:9092

# FILE UPLOAD CONFIG
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=25MB